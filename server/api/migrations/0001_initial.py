# Generated by Django 5.2.6 on 2025-09-17 21:15

import api.models
import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('subject', models.CharField(choices=[('reservation', 'Reservation Inquiry'), ('private_event', 'Private Event'), ('catering', 'Catering Services'), ('corporate', 'Corporate Booking'), ('feedback', 'Feedback'), ('general', 'General Inquiry')], max_length=20)),
                ('message', models.TextField()),
                ('event_date', models.DateField(blank=True, null=True)),
                ('guest_count', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
                ('event_type', models.CharField(blank=True, choices=[('wedding', 'Wedding'), ('birthday', 'Birthday Party'), ('corporate', 'Corporate Event'), ('anniversary', 'Anniversary'), ('graduation', 'Graduation'), ('other', 'Other')], max_length=20, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_replied', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_capacity', models.IntegerField(default=100)),
                ('opening_time', models.TimeField(default='17:00')),
                ('closing_time', models.TimeField(default='23:00')),
                ('reservation_duration_minutes', models.IntegerField(default=120)),
                ('min_party_size', models.IntegerField(default=1)),
                ('max_party_size', models.IntegerField(default=20)),
                ('advance_booking_days', models.IntegerField(default=90)),
                ('cancellation_hours', models.IntegerField(default=2)),
            ],
            options={
                'verbose_name': 'Restaurant Settings',
                'verbose_name_plural': 'Restaurant Settings',
            },
        ),
        migrations.CreateModel(
            name='GalleryItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Title of the image', max_length=200)),
                ('description', models.TextField(help_text='Description that appears with the image')),
                ('image', models.ImageField(help_text='Upload gallery image', upload_to=api.models.gallery_image_path)),
                ('category', models.CharField(choices=[('food', 'Food & Drinks'), ('interior', 'Interior Design'), ('events', 'Events & Celebrations'), ('staff', 'Our Team'), ('atmosphere', 'Atmosphere'), ('other', 'Other')], default='other', help_text='Category for organizing gallery items', max_length=20)),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this image prominently in the gallery')),
                ('display_order', models.IntegerField(default=0, help_text='Order in which to display (lower numbers first)')),
                ('is_active', models.BooleanField(default=True, help_text='Show this item in the public gallery')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['display_order', '-created_at'],
                'indexes': [models.Index(fields=['is_active', 'display_order'], name='api_gallery_is_acti_4fbf61_idx'), models.Index(fields=['category', 'is_active'], name='api_gallery_categor_654b63_idx'), models.Index(fields=['is_featured', 'is_active'], name='api_gallery_is_feat_1817a2_idx')],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('party_size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('occasion', models.CharField(blank=True, choices=[('birthday', 'Birthday Celebration'), ('anniversary', 'Anniversary'), ('business', 'Business Meeting'), ('date', 'Date Night'), ('family', 'Family Gathering'), ('celebration', 'Special Celebration'), ('casual', 'Casual Dining'), ('other', 'Other')], max_length=20, null=True)),
                ('special_requests', models.TextField(blank=True, max_length=500, null=True)),
                ('dietary_restrictions', models.TextField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('seated', 'Seated'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date', '-time'],
                'indexes': [models.Index(fields=['email', 'phone'], name='api_reserva_email_1e9b61_idx'), models.Index(fields=['date', 'time'], name='api_reserva_date_6f0f4a_idx'), models.Index(fields=['status'], name='api_reserva_status_b87e2f_idx')],
            },
        ),
    ]
