# Generated by Django 5.0.1 on 2025-09-28 14:40

import api.models
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_rename_api_event_is_acti_b43e0f_idx_api_event_is_acti_bab322_idx_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Category name', max_length=100)),
                ('category_type', models.CharField(choices=[('appetizers', 'Appetizers'), ('mains', 'Main Courses'), ('cocktails', 'Cocktails'), ('wine', 'Wine & Spirits'), ('desserts', 'Desserts'), ('beverages', 'Beverages'), ('specials', "Chef's Specials")], help_text='Category type', max_length=20, unique=True)),
                ('description', models.TextField(blank=True, help_text='Category description')),
                ('icon', models.CharField(blank=True, help_text='Emoji icon for category (e.g., ü•ó, üçñ, üç∏)', max_length=10)),
                ('display_order', models.IntegerField(default=0, help_text='Order in which to display (lower numbers first)')),
                ('is_active', models.BooleanField(default=True, help_text='Show this category on the menu')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Menu Category',
                'verbose_name_plural': 'Menu Categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Item name', max_length=200)),
                ('description', models.TextField(help_text='Item description')),
                ('price', models.DecimalField(decimal_places=2, help_text='Item price', max_digits=8)),
                ('image', models.ImageField(blank=True, help_text='Item image (optional)', null=True, upload_to=api.models.menu_image_path)),
                ('dietary_info', models.JSONField(blank=True, default=list, help_text="List of dietary restrictions/info (e.g., ['vegetarian', 'gluten_free'])")),
                ('tags', models.JSONField(blank=True, default=list, help_text="List of tags (e.g., ['signature', 'popular'])")),
                ('ingredients', models.TextField(blank=True, help_text='Main ingredients (optional)')),
                ('allergens', models.TextField(blank=True, help_text='Allergen information (optional)')),
                ('calories', models.IntegerField(blank=True, help_text='Calorie count (optional)', null=True)),
                ('preparation_time', models.CharField(blank=True, help_text="Preparation time (e.g., '15 minutes', optional)", max_length=50)),
                ('is_available', models.BooleanField(default=True, help_text='Item is currently available')),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this item prominently')),
                ('display_order', models.IntegerField(default=0, help_text='Order within category (lower numbers first)')),
                ('has_variants', models.BooleanField(default=False, help_text='Item has size/variant options (e.g., glass vs bottle)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(help_text='Menu category', on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='api.menucategory')),
            ],
            options={
                'ordering': ['category__display_order', 'display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MenuItemVariant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Variant name (e.g., 'Glass', 'Bottle', 'Small', 'Large')", max_length=100)),
                ('description', models.CharField(blank=True, help_text='Variant description (optional)', max_length=200)),
                ('price', models.DecimalField(decimal_places=2, help_text='Variant price', max_digits=8)),
                ('variant_type', models.CharField(choices=[('size', 'Size'), ('portion', 'Portion'), ('preparation', 'Preparation Style'), ('wine_format', 'Wine Format'), ('other', 'Other')], default='size', help_text='Type of variant', max_length=20)),
                ('display_order', models.IntegerField(default=0, help_text='Display order within item')),
                ('is_available', models.BooleanField(default=True, help_text='Variant is currently available')),
                ('menu_item', models.ForeignKey(help_text='Menu item this variant belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='api.menuitem')),
            ],
            options={
                'ordering': ['display_order', 'price'],
            },
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['category', 'is_available'], name='api_menuite_categor_4ec66b_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['is_featured', 'is_available'], name='api_menuite_is_feat_5c061b_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['display_order'], name='api_menuite_display_2a0d93_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='menuitemvariant',
            unique_together={('menu_item', 'name')},
        ),
    ]
